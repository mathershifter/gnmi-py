variables:
  UV_VERSION: 0.6
  PYTHON_VERSION: 3.9
  BASE_LAYER: alpine
  # GitLab CI creates a separate mountpoint for the build directory,
  # so we need to copy instead of using hard links.
  UV_LINK_MODE: copy

stages:
  - analysis

uv:
  stage: analysis
  image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER
  script:
    - uv sync --frozen

uv-install:
  variables:
    UV_CACHE_DIR: .uv-cache
  cache:
    key:
      files:
        - uv.lock
    paths:
      - $UV_CACHE_DIR
  script:
    - uv sync --frozen
    - uv cache prune --ci

# before_script:
#   - python --version ; pip --version  # For debugging
#   - python -m venv .venv
#   - source .venv/bin/activate

test:
  script:
    - ruff format --diff
    - ruff check
    - pytest tests/

build:
  script:
    - uv build
  artifacts:
    paths:
      - build/*
  rules:
    - if: $CI_COMMIT_TAG
      when: always

# pages:
#   script:
#     - pip install sphinx sphinx-rtd-theme
#     - cd docs
#     - make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production
